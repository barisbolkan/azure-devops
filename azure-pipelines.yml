# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'VS2017-Win2016'

variables:
  azureSubscription: bolkanapps-service-connection

steps:
- script: |
    dotnet restore
    dotnet build --configuration Release

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--output $(Build.BinariesDirectory)/publish_output --configuration Release'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/publish_output'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureRmWebAppDeployment@4
  displayName: 'Azure App Service Deploy: javapipeline'
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: functionApp
    WebAppName: mystroidapi
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    enableCustomDeployment: true
    DeploymentType: runFromZip    
    TakeAppOfflineFlag: false
    ExcludeFilesFromAppDataFlag: false
    RenameFilesFlag: false

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'